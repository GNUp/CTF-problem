import angr 
import logging
#import IPython

fail = [0x40298e, 0x4029ae, 0x4029ee, 0x402b19, 0x402b39, 0x402b79, 0x402ca4, 0x402cc4, 0x402d04, 0x402e2f, 0x402e4f, 0x402e8f, 0x402fba, 0x402fda, 0x40301a, 0x403145, 0x403165, 0x4031a5, 0x4032d0, 0x4032f0, 0x403330, 0x40345b, 0x40347b, 0x4034bb, 0x4035e6, 0x403606, 0x403646, 0x403771, 0x403791, 0x4037d1, 0x4038fc, 0x40391c, 0x40395c, 0x403a87, 0x403aa7, 0x403ae7, 0x403c12, 0x403c32, 0x403c72, 0x403d9d, 0x403dbd, 0x403dfd, 0x403f28, 0x403f48, 0x403f88, 0x4040b3, 0x4040d3, 0x404113, 0x40423e, 0x40425e, 0x40429e, 0x4043c9, 0x4043e9, 0x404429, 0x404554, 0x404574, 0x4045b4, 0x4046df, 0x4046ff, 0x40473f, 0x40486a, 0x40488a, 0x4048ca, 0x4049f5, 0x404a15, 0x404a55, 0x404b80, 0x404ba0, 0x404be0, 0x404d0b, 0x404d2b, 0x404d6b, 0x404e96, 0x404eb6, 0x404ef6, 0x405021, 0x405041, 0x405081, 0x4051ac, 0x4051cc, 0x40520c, 0x405337, 0x405357, 0x405397, 0x4054c2, 0x4054e2, 0x405522, 0x40564d, 0x40566d, 0x4056ad, 0x4057d8, 0x4057f8, 0x405838, 0x405963, 0x405983, 0x4059c3, 0x405aee, 0x405b0e, 0x405b4e, 0x405c79, 0x405c99, 0x405cd9, 0x405e04, 0x405e24, 0x405e64, 0x405f8f, 0x405faf, 0x405fef, 0x40611a, 0x40613a, 0x40617a, 0x4062a5, 0x4062c5, 0x406305, 0x406430, 0x406450, 0x406490, 0x4065bb, 0x4065db, 0x40661b, 0x406746, 0x406766, 0x4067a6, 0x4068d1, 0x4068f1, 0x406931, 0x406a5c, 0x406a7c, 0x406abc, 0x406be7, 0x406c07, 0x406c47, 0x406d72, 0x406d92, 0x406dd2, 0x406efd, 0x406f1d, 0x406f5d, 0x407088, 0x4070a8, 0x4070e8, 0x407213, 0x407233, 0x407273, 0x40739e, 0x4073be, 0x4073fe, 0x407529, 0x407549, 0x407589, 0x4076b4, 0x4076d4, 0x407714, 0x40783f, 0x40785f, 0x40789f, 0x4079ca, 0x4079ea, 0x407a2a, 0x407b55, 0x407b75, 0x407bb5, 0x407ce0, 0x407d00, 0x407d40, 0x407e6b, 0x407e8b, 0x407ecb, 0x407ff6, 0x408016, 0x408056, 0x408181, 0x4081a1, 0x4081e1, 0x40830c, 0x40832c, 0x40836c, 0x408497, 0x4084b7, 0x4084f7, 0x408622, 0x408642, 0x408682, 0x4087ad, 0x4087cd, 0x40880d, 0x408938, 0x408958, 0x408998, 0x408ac3, 0x408ae3, 0x408b23, 0x408c4e, 0x408c6e, 0x408cae, 0x408dd9, 0x408df9, 0x408e39, 0x408f64, 0x408f84, 0x408fc4, 0x4090ef, 0x40910f, 0x40914f, 0x40927a, 0x40929a, 0x4092da, 0x409405, 0x409425, 0x409465, 0x409590, 0x4095b0, 0x4095f0, 0x40971b, 0x40973b, 0x40977b, 0x4098a6, 0x4098c6, 0x409906, 0x409a31, 0x409a51, 0x409a91, 0x409bbc, 0x409bdc, 0x409c1c, 0x409d47, 0x409d67, 0x409da7, 0x409ed2, 0x409ef2, 0x409f32, 0x40a05d, 0x40a07d, 0x40a0bd, 0x40a1e8, 0x40a208, 0x40a248, 0x40a373, 0x40a393, 0x40a3d3, 0x40a4fe, 0x40a51e, 0x40a55e, 0x40a689, 0x40a6a9, 0x40a6e9, 0x40a814, 0x40a834, 0x40a874, 0x40a99f, 0x40a9bf, 0x40a9ff, 0x40ab2a, 0x40ab4a, 0x40ab8a, 0x40acb5, 0x40acd5, 0x40ad15, 0x40ae40, 0x40ae60, 0x40aea0, 0x40afcb, 0x40afeb, 0x40b02b, 0x40b156, 0x40b176, 0x40b1b6, 0x40b2e1, 0x40b301, 0x40b341, 0x40b46c, 0x40b48c, 0x40b4cc, 0x40b5f7, 0x40b617, 0x40b657, 0x40b782, 0x40b7a2, 0x40b7e2, 0x40b90d, 0x40b92d, 0x40b96d, 0x40ba98, 0x40bab8, 0x40baf8, 0x40bc23, 0x40bc43, 0x40bc83, 0x40bdae, 0x40bdce, 0x40be0e, 0x40bf39, 0x40bf59, 0x40bf99, 0x40c0c4, 0x40c0e4, 0x40c124, 0x40c24f, 0x40c26f, 0x40c2af, 0x40c3da, 0x40c3fa, 0x40c43a, 0x40c565, 0x40c585, 0x40c5c5, 0x40c6f0, 0x40c710, 0x40c750, 0x40c87b, 0x40c89b, 0x40c8db, 0x40ca06, 0x40ca26, 0x40ca66, 0x40cb91, 0x40cbb1, 0x40cbf1, 0x40cd1c, 0x40cd3c, 0x40cd7c, 0x40cea7, 0x40cec7, 0x40cf07, 0x40d032, 0x40d052, 0x40d092, 0x40d1bd, 0x40d1dd, 0x40d21d, 0x40d348, 0x40d368, 0x40d3a8, 0x40d4d3, 0x40d4f3, 0x40d533, 0x40d65e, 0x40d67e, 0x40d6be, 0x40d7e9, 0x40d809, 0x40d849, 0x40d974, 0x40d994, 0x40d9d4, 0x40daff, 0x40db1f, 0x40db5f, 0x40dc8a, 0x40dcaa, 0x40dcea, 0x40de15, 0x40de35, 0x40de75, 0x40dfa0, 0x40dfc0, 0x40e000, 0x40e12b, 0x40e14b, 0x40e18b, 0x40e2b6, 0x40e2d6, 0x40e316, 0x40e441, 0x40e461, 0x40e4a1, 0x40e5cc, 0x40e5ec, 0x40e62c, 0x40e757, 0x40e777, 0x40e7b7, 0x40e8e2, 0x40e902, 0x40e942, 0x40ea6d, 0x40ea8d, 0x40eacd, 0x40ebf8, 0x40ec18, 0x40ec58, 0x40ed83, 0x40eda3, 0x40ede3, 0x40ef0e, 0x40ef2e, 0x40ef6e, 0x40f099, 0x40f0b9, 0x40f0f9, 0x40f224, 0x40f244, 0x40f284, 0x40f3af, 0x40f3cf, 0x40f40f, 0x40f53a, 0x40f55a, 0x40f59a, 0x40f6c5, 0x40f6e5, 0x40f725, 0x40f850, 0x40f870, 0x40f8b0, 0x40f9db, 0x40f9fb, 0x40fa3b, 0x40fb66, 0x40fb86, 0x40fbc6, 0x40fcf1, 0x40fd11, 0x40fd51, 0x40fe7c, 0x40fe9c, 0x40fedc, 0x410007, 0x410027, 0x410067, 0x410192, 0x4101b2, 0x4101f2, 0x41031d, 0x41033d, 0x41037d, 0x4104a8, 0x4104c8, 0x410508, 0x410633, 0x410653, 0x410693, 0x4107be, 0x4107de, 0x41081e, 0x410949, 0x410969, 0x4109a9, 0x410ad4, 0x410af4, 0x410b34, 0x410c5c, 0x410c7c, 0x410cbc, 0x410de7, 0x410e07, 0x410e47, 0x410f72, 0x410f92, 0x410fd2]
find = 0x0000000000110E7 + 0x400000
main = 0x00000000001106F + 0x400000
p = angr.Project('./sakura', load_options={'auto_load_libs': False})


init = p.factory.blank_state(addr=main)
for i in range(400):
    tmp = init.posix.files[0].read_from(1)
    init.se.add(tmp >= 0x30)
    init.se.add(tmp <= 0x39)
init.posix.files[0].seek(0)
init.posix.files[0].length = 400
sm = p.factory.simgr(init)
# angr.manager.l.setLevel(logging.DEBUG)
ex = sm.explore(find=find, avoid = fail)

final = ex.found[0]
flag = final.posix.dumps(1)
print("Flag: {0}".format(final.posix.dumps(1)))
#IPython.embed()
